#!/bin/bash

# =============================================================================
# SSL Certificate Fallback Script
# =============================================================================
#
# PURPOSE:
#   Ensures SSL certificates exist before nginx starts. Creates fallback 
#   self-signed certificates if no trusted certificates are found.
#
# WHEN IT RUNS:
#   - Automatically during 'make up' via cert-init container
#   - Before nginx starts (prevents nginx startup failures)
#   - Can be run manually if certificate issues occur
#
# WHAT IT DOES:
#   1. Checks if SSL certificates already exist
#   2. If found, exits successfully (nginx can start)
#   3. If missing, generates self-signed fallback certificates
#   4. Creates certificates that nginx can use immediately
#
# CERTIFICATE PRIORITY:
#   1. mkcert certificates (trusted, generated by make certs)
#   2. Self-signed fallback certificates (this script)
#
# GENERATED FALLBACK FILES:
#   - docker/certs/cert.pem (self-signed certificate)
#   - docker/certs/cert-key.pem (private key)
#
# USAGE:
#   ./docker/scripts/ensure-certs.sh
#   OR
#   Automatic via docker-compose (cert-init service)
#
# CONTAINER CONTEXT:
#   - Works both on host system and inside containers
#   - Auto-detects environment and adjusts paths accordingly
#   - Uses /certs in container, docker/certs on host
#
# SECURITY NOTE:
#   Fallback certificates will show browser warnings.
#   Run 'make certs' for trusted certificates.
#
# EXIT CODES:
#   0 - Success (certificates exist or created)
#   Non-zero - Certificate creation failed
#
# =============================================================================

set -e  # Exit immediately on any error

# Handle both host and container contexts
if [ -d "/certs" ]; then
    # Running in container
    CERTS_DIR="/certs"
else
    # Running on host
    CERTS_DIR="docker/certs"
fi

CERT_FILE="$CERTS_DIR/cert.pem"
KEY_FILE="$CERTS_DIR/cert-key.pem"

# Create certs directory if it doesn't exist
mkdir -p "$CERTS_DIR"

# Check if certificates already exist
if [ -f "$CERT_FILE" ] && [ -f "$KEY_FILE" ]; then
    echo "✓ SSL certificates already exist"
    exit 0
fi

echo "⚠ No SSL certificates found, generating fallback self-signed certificates..."
echo "  (Run 'make certs' for proper mkcert certificates)"

# Generate self-signed certificate valid for 365 days
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout "$KEY_FILE" \
    -out "$CERT_FILE" \
    -subj "/C=UK/ST=Local/L=Development/O=Docker Dev/CN=localhost" \
    -addext "subjectAltName=DNS:localhost,DNS:*.test,IP:127.0.0.1" \
    2>/dev/null

echo "✓ Fallback SSL certificates generated"
echo "  Note: These are self-signed and will show security warnings"
echo "  Run 'make certs' to generate trusted certificates with mkcert"